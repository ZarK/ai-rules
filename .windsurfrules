# .windsurfrules

## General Instructions
- Always check for the existence of a `.aidocs` folder in the repository.
- If `.aidocs` does not exist, create it with the following structure:
  - `workflow_guides.md`: Contains overall documentation on workflows and coding practices.
  - `project_plan.md`: Contains the high-level project plan and roadmap.
  - `temporal_goals/`: Subfolder for short-term goals and tasks (e.g., `goal_YYYY-MM-DD.md`).
  - `progress_logs/`: Subfolder for tracking progress and AI-generated outputs.

## Workflow Structure
- Clear prerequisites and starting point for tasks.
- Provide conceptual explanations before making code changes.
- Follow a step-by-step implementation guide.
- Include testing and verification steps for all changes.

## Progressive Enhancement Pattern
- Start with minimal core functionality.
- Test core functionality end-to-end before proceeding.
- Integrate with the main application flow.
- Add monitoring and user feedback mechanisms.
- Only then add configuration/management UI.
- Finally, implement additional features.

## Git Workflow
- Always check `git status` before pushing changes.
- Group changes into logical commits.
- Write descriptive commit messages for each commit.
- Keep documentation in sync with code changes.

## Environment Requirements
- Use Python 3.11 and a `.venv` virtual environment.
- Activate the virtual environment before running any commands:
  - **Windows**: `.venv\Scripts\Activate.ps1`
  - **macOS/Linux**: `.venv/bin/activate`
- Add `.venv/` to `.gitignore`.
- Use `requirements.txt` with hashed dependencies (`--require-hashes`).

## Cross-Platform Compatibility
- Use PowerShell for terminal commands on Windows.
- Use Bash for terminal commands on macOS/Linux.
- Ensure AI-generated commands use the correct path separators:
  - **Windows**: `\`
  - **macOS/Linux**: `/`

## Quality Assurance
- All tools must include a `__main__` test section.
- Implement error handling before feature implementation.
- Ensure standalone tests pass before integrating features into the main workflow.

## Pre-Commit Checks
- Verify tutorial numbering matches the `solution/` directory.
- Ensure code samples match the reference implementation.
- Validate documentation links and ensure they are up-to-date.

## Integration with Cursor
- Create an identical `.cursorrules` file alongside `.windsurfrules` for compatibility with Cursor.
